html {
    box-sizing: border-box;
}

*,
*::after,
*::before {
    box-sizing: inherit;
}

.container {
    --flex-bg-color: #333;
    --flex-child-item-color: #666;
    
    background-color: var(--flex-bg-color);
    width: 100%;
    height: 400px;
    margin: 10px 0;
    display: flex; /*ocupan todo el ancho de la pantalla*/
    display: inline-flex; /*ocupan el ancho requerido en línea*/
    display: flex;
    
    /* direction --> define el eje principal de donde tomará la referencia principal */
    flex-direction: row; /*default*/
    flex-direction: row-reverse;
    flex-direction: column;
    flex-direction: column-reverse;
    flex-direction: row;
    flex-wrap: nowrap; /*La caja va alinear todos sus hijos en una sola línea -- default*/
    flex-wrap: wrap;
    flex-flow: row nowrap; /*Es un shorcute de flexdirection y flex-wrap*/
    
    /* Justify --> Define la alineación de los elementos hijos, respecto del eje principal */
    justify-content: flex-start; /*default*/
    justify-content: center;
    justify-content: flex-end;
    justify-content: space-between;
    justify-content: space-around; /*espacio entre las orillas las toma desde la mitad*/
    justify-content: space-evenly; /*espacio entre las orillas proporcional a cada lado*/
    justify-content: flex-start; /*default*/

    /* align-items --> Trabaja sobre Y, y si el alto y ancho se encuentran definidos respectará estos valores previos 
    define la alineación de los hijos en el eje transversal (cross axis), dentro de cada línea*/
    align-items: stretch; /*default*/
    align-items: flex-start;
    align-items: flex-end;
    align-items: center;
    align-items: baseline;
    align-items: flex-start;
    align-items: baseline;
    align-items: center;
    align-items: stretch;

    /* align-content --> define la alineación de los hijos en el eje transversal(cross axis), NO funciona cuando los hijos están en una sóla línea.
    siempre el "flex-wrap: nowrap" NO ACTIVA el align content */
    align-content: flex-start; /*default*/
    align-content: flex-end;
    align-content: center;
    align-content: stretch;
    align-content: space-between;
    align-content: space-around;
    align-content: space-evenly;
    align-content: flex-start; /*default*/

}

.item {
    border: medium solid salmon;
    width: 100px;
    /* height: 20%; */
    background-color: var(--flex-child-item-color);
    /* flex-grow --> Cuando la caja flexbox tenga espacio sobrante, es la habilidad o el facto de crecer, valor por defecto es 0, NO se aceptan valores negativos */
    flex-grow: 0; /*default*/
    /* flex-shrink --> Cuando la caja flexbox No tenga espacio sobrante, es la habilidad o el factor de encogerse, valor por defecto es 1, No se aceptan valores negativos */
    flex-shrink: 1; /*default*/
    /* Es el tamaño del elemento hijo dentro de la línea de ja caja flexbox
    Si la caja flexbox tiene dirección de fila, flex-basis representa el width
    Si la caja flexbox tiene direccion de columna, flex-basis representa el height 
    Valor por defecto auto */
    flex-basis: auto; /*default*/
    /* flex-grow: 1;
    flex-grow: 0;  */
    /* flex-shrink: 1; */
    flex-basis: 100px;  /*representa la anchura, el valor de flex-basis para flexbox tiene mayor peso que width */
    flex-basis: auto; /*default*/
    /*es un shorthand de las propiedades flex-grow, flex-shrink y flex-basis en ese orden
    - flex: <0/1> <0/1/...> <auto/px...>*/
    flex: 0 1 auto;
}

/* .item:nth-child(2){
    flex-shrink: 2;
}  */
/* .item:nth-child(2),
.item:nth-child(17) {
    font-size: 3rem;
} */
.order-align {
    /* Representa el orden que tendrán los elementos hijos en la caja flexbox
    Valor por defecto 0
    Se aceptan valores positivos y negativos
    Un valor menor siempre irá antes que un valor mayor */
    order: 0;   /*default*/
    /* Sobreescribe el valor de la propiedad align-items sólo para el elemento hijo especificado */
    align-self: stretch;    /*default*/
}

.order-align article:nth-child(2) {
    order: -1;
    order: 1;
    order: 0;
}

.order-align article:nth-child(3) {
    align-self: flex-start;
    align-self: flex-end;
    align-self: center;
}